Pseudo Code: (copied from the homework assignment)

MATRIX_MULTIPLY(A, B): 
  if columns(A) ≠ rows(B):                                      // 1 time
    raise ValueError("Matrix multiplication is not defined.")   // 1 time
 
  rows_A ← number of rows in A                                  // 1 time
  cols_A ← number of columns in A                               // 1 time
  cols_B ← number of columns in B                               // 1 time
  result ← matrix of size rows_A x cols_B filled with zeros     // 1 time

  for i from 1 to rows_A do:                                    // n times
    for j from 1 to cols_B do:                                  // n^2 times
      sum ← 0                                                   // n^2 times
      for k from 1 to cols_A do:                                // n^3 times
        sum ← sum + A[i][k] * B[k][j]                           // n^3 times
      result[i][j] ← sum return result                          // n^3 times

Time complexity: n^3, cubic
3 nested for loops has the function growing at cubic rate.

Best Case Scenario:
Matrix A and B are both 1x1 or columns(A) != rows(B)
O(1)
Ω(1)
Θ(1)

Worst Case Scenario:
O(n^3)
Ω(n^3)
Θ(n^3)

Average Case Scenario:
O(n^3)
Ω(n^3)
Θ(n^3)
