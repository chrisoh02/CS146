Pseudo Code
isPrime(n):                        // 1 time
  for(i = 2, i*i <= n; i++) {      // sqrt(n) times
    if(n % i == 0) {               // sqrt(n) times
      return false                 // 1 time
    }
  return true                      // 1 time

Best Case Scenario: n is even
The function immediately returns false because n is divisible by i (i = 2).
O(1)
Ω(1)
Θ(1)

Worst Case Scenario: n is a large prime number
O(sqrt(n))
Ω(sqrt(n))
Θ(sqrt(n))

Average Case Scenario: n is some number, might be even might be odd, but most likely won't have to finish the entire loop
O(sqrt(n))
Ω(sqrt(n))
Θ(sqrt(n))
